// index.html:

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link href="https://fonts.googleapis.com/css2?family=Merriweather&display=swap" rel="stylesheet">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Triple Triad Memory</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>

----------------------------------------

// src/App.css:

/* App.css */

body {
  display: flex;
  flex-direction: column;
  min-width: 100vh;
  height: 100vh;
  background-color: #261e1e;
  color: antiquewhite;

}

.app {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100vh;
  text-align: center;
  overflow-y: hidden;
  overflow-x: hidden;
}

.app-header {
  font-family: 'Merriweather', serif;
  color: gold;
  font-size: 2.5rem;
  text-align: center;
  margin-top: 40px;
  margin-bottom: 30px;
  padding-bottom: 1rem;
  border-bottom: 2px solid #1a1313;
  width: 90%;

}

.score {
  font-size: 1em;
  padding: 10px 20px;
  margin-bottom: 20px;
  border: 2px solid #d4af37;
  background-color: #4a2525;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  text-align: center;
}


.card-grid {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  gap: 0.1rem;
  padding: 1rem;
  padding-left: 3rem;
  padding-right: 3rem;
  width: auto;
}

.card {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 0;
  padding: 0;
  margin: 0;
}

.modal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  border-radius: 15px;
  align-items: center;
  gap: 3rem;
}

.modal-content {
  border: 2px solid #d4af37;
  background-color: #4a2525;
  padding: 40px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  border-radius: 15px;
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
}

.app-footer {
  color: #766464;
  background-color: #1a1313;
  width: 100%;
  padding: 20px 0;
  text-align: center;
  font-size: 1rem;
  margin-top: 20px;
}

.app-footer a {
  color: #766464;
  text-decoration: none;
  margin-left: 5px;
}

.app-footer a:hover {
  color: #d4af37;
}

@media (min-width: 600px) {
  .card {
    flex: 0 0 calc(20% - 1rem);
    margin: 0.5rem;
  }
  .card-grid {
    width: 100%;
    padding: 1rem;
  }
}

@media (max-width: 599px) {
  .card {
    flex: 0 0 calc(50% - 1rem);
  }
}

----------------------------------------

// src/App.jsx:

import React from "react";
import { useState, useEffect } from "react";
import "./App.css";
import Card from "./Card";

const App = () => {
  const [cards, setCards] = useState([]);
  const [score, setScore] = useState(0);
  const [gameOver, setGameOver] = useState(false);
  const [selectedCards, setSelectedCards] = useState(new Set());
  const [turn, setTurn] = useState(0);
  const [isReady, setIsReady] = useState(false);
  const [showModal, setShowModal] = useState(false);

  useEffect(() => {
    if (!gameOver && turn === 0) {
      fetchCards();
    } else if (!gameOver && turn > 0) {
      shuffleAndSetCards();
    }
  }, [gameOver, turn]);

  const fetchCard = async (id) => {
    const response = await fetch(`https://triad.raelys.com/api/cards/${id}`);
    const data = await response.json();
    return {
      id: data.id,
      name: data.name,
      image: data.image,
    };
  };

  const shuffleArray = (array) => {
    for (let i = array.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [array[i], array[j]] = [array[j], array[i]];
    }
  };

  const fetchCards = async () => {
    const cardIDs = new Set();
    while (cardIDs.size < 10) {
      const randomId = Math.floor(Math.random() * 150) + 1;
      cardIDs.add(randomId);
    }

    const cardPromises = Array.from(cardIDs).map(fetchCard);
    const cardData = await Promise.all(cardPromises);
    setCards(cardData);
    setIsReady(true);
  };

  const shuffleAndSetCards = () => {
    let shuffledCards = [...cards];
    shuffleArray(shuffledCards);
    setCards(shuffledCards);
  };

  const handleCardClick = (cardId) => {
    if (!isReady) return; // Avoid clicking if the cards are not ready

    if (selectedCards.has(cardId)) {
      setGameOver(true); // End the game if the card has already been selected
      setShowModal(true);
    } else {
      setSelectedCards(new Set([...selectedCards, cardId]));
      setScore(score + 1);

      if (turn + 1 >= 10) {
        setGameOver(true);
        setShowModal(true);
      } else {
        setTurn(turn + 1); // Move to the next turn
      }
    }
  };

  const endGame = () => {
    setShowModal(false);
    setGameOver(false);
    setSelectedCards(new Set());
    setScore(0);
    setTurn(0);
    setIsReady(false);
    fetchCards();
  };

  return (
    <div className="app">
      <header className="app-header">Triple Triad Memory</header>

      <div className="score">Points: {score}</div>
      <div className="card-grid">
        {cards.map((card) => (
          <Card
            key={card.id}
            card={card}
            onClick={() => handleCardClick(card.id)}
          />
        ))}
      </div>
      {showModal && (
        <div className="modal">
          <div className="modal-content">
            <p>{gameOver ? "Game Over!" : "Congratulations!"}</p>
            <button onClick={endGame}>Play Again</button>
          </div>
        </div>
      )}
      <footer className="app-footer">
        Alex Arroyo © 2023 -
        <a
          href="https://github.com/alexaldearroyo"
          target="_blank"
          rel="noopener noreferrer"
        >
          GitHub
        </a>
      </footer>
    </div>
  );
};

export default App;

----------------------------------------

// src/Card.css:

/* Card.css */
.card {
    cursor: pointer;
    border-radius: 10px;
    padding: 10px;
    text-align: center;
    margin: 10px;
    transition: transform 0.2s;
}

.card:hover {
    transform: scale(1.05);
}

.card-image {
    width: 125px;
    height: 125px;
    object-fit: contain;
}

.card-name {
    margin-top: 10px;
    font-size: 1rem;
    font-family: 'Merriweather', serif; 
}

----------------------------------------

// src/Card.jsx:

import React from 'react';
import './Card.css'; // Asegúrate de crear y estilizar este archivo CSS

const Card = ({ card, onClick }) => {
    return (
        <div className="card" onClick={onClick}>
            <img src={card.image} alt={card.name} className="card-image" />
            <h2 className="card-name">{card.name}</h2>
        </div>
    );
};

export default Card;

----------------------------------------

// src/Utils.jsx:


----------------------------------------

// src/assets/react.svg:

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="35.93" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 228"><path fill="#00D8FF" d="M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z"></path></svg>
----------------------------------------

// src/index.css:

:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

body {
  margin: 0;
  display: flex;
  place-items: center;
  min-width: 320px;
  min-height: 100vh;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}

----------------------------------------

// src/main.jsx:

import React from 'react'
import ReactDOM from 'react-dom/client'
import App from './App.jsx'
import './index.css'

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
)

----------------------------------------

